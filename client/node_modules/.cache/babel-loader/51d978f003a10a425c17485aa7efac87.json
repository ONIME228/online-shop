{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyByrNI-d9eM_3KAJLI_Fnyfddz8OnMyMyM\",\n  authDomain: \"crown-database-f0c61.firebaseapp.com\",\n  databaseURL: \"https://crown-database-f0c61.firebaseio.com\",\n  projectId: \"crown-database-f0c61\",\n  storageBucket: \"crown-database-f0c61.appspot.com\",\n  messagingSenderId: \"879385386392\",\n  appId: \"1:879385386392:web:8ae99f5d905e2cc3d09fed\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log('collectionRef', collectionRef);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    console.log('title', title);\n    return {\n      routeName: encodeURI(title),\n      id: doc.id,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title] = collection;\n    return accumulator;\n  }, {});\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/naviy/My-first-project/first-online-shop/lesson-3/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","id","reduce","accumulator","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\n\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyByrNI-d9eM_3KAJLI_Fnyfddz8OnMyMyM\",\r\n    authDomain: \"crown-database-f0c61.firebaseapp.com\",\r\n    databaseURL: \"https://crown-database-f0c61.firebaseio.com\",\r\n    projectId: \"crown-database-f0c61\",\r\n    storageBucket: \"crown-database-f0c61.appspot.com\",\r\n    messagingSenderId: \"879385386392\",\r\n    appId: \"1:879385386392:web:8ae99f5d905e2cc3d09fed\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get();\r\n    if (!snapShot.exists) {\r\n        const {\r\n            displayName,\r\n            email\r\n        } = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            })\r\n        } catch (error) {\r\n            console.log('error creating user', error.message);\r\n        }\r\n    }\r\n    return userRef;\r\n}\r\n\r\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\r\n    const collectionRef = firestore.collection(collectionKey);\r\n    console.log('collectionRef', collectionRef);\r\n\r\n    const batch = firestore.batch();\r\n    objectsToAdd.forEach(obj => {\r\n        const newDocRef = collectionRef.doc();\r\n        batch.set(newDocRef, obj);\r\n    });\r\n\r\n    return await batch.commit()\r\n};\r\n\r\nexport const convertCollectionsSnapshotToMap = collections => {\r\n    const transformedCollection = collections.docs.map(doc => {\r\n        const {\r\n            title,\r\n            items\r\n        } = doc.data();\r\n        console.log('title',title);\r\n\r\n        return {\r\n            routeName: encodeURI(title),\r\n            id: doc.id,\r\n            items\r\n        }\r\n    })\r\n    return transformedCollection.reduce((accumulator, collection) => {\r\n        accumulator[collection.title] = collection;\r\n        return accumulator;\r\n    }, {});\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({\r\n    prompt: 'select_account'\r\n});\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}