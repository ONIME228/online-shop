{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyByrNI-d9eM_3KAJLI_Fnyfddz8OnMyMyM\",\n  authDomain: \"crown-database-f0c61.firebaseapp.com\",\n  databaseURL: \"https://crown-database-f0c61.firebaseio.com\",\n  projectId: \"crown-database-f0c61\",\n  storageBucket: \"crown-database-f0c61.appspot.com\",\n  messagingSenderId: \"879385386392\",\n  appId: \"1:879385386392:web:8ae99f5d905e2cc3d09fed\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/naviy/My-first-project/first-online-shop/lesson-3/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AAEA,OAAO,oBAAP;AACA,OAAO,eAAP;AAGA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,sCAFD;AAGXC,EAAAA,WAAW,EAAE,6CAHF;AAIXC,EAAAA,SAAS,EAAE,sBAJA;AAKXC,EAAAA,aAAa,EAAE,kCALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE;AAPI,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AAGf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,UAAM;AAACC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,QAAsBV,QAA5B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOa,KAAP,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACJ;;AACD,SAAOf,OAAP;AACH,CAxBM;AAyBPZ,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAEA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AACzBC,EAAAA,MAAM,EAAE;AADiB,CAA7B;AAGA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\n\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyByrNI-d9eM_3KAJLI_Fnyfddz8OnMyMyM\",\r\n    authDomain: \"crown-database-f0c61.firebaseapp.com\",\r\n    databaseURL: \"https://crown-database-f0c61.firebaseio.com\",\r\n    projectId: \"crown-database-f0c61\",\r\n    storageBucket: \"crown-database-f0c61.appspot.com\",\r\n    messagingSenderId: \"879385386392\",\r\n    appId: \"1:879385386392:web:8ae99f5d905e2cc3d09fed\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n    const snapShot = await userRef.get();\r\n\r\n    if (!snapShot.exists) {\r\n        const {displayName,email} = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try {\r\n            await userRef.set({\r\n              displayName,\r\n              email,\r\n              createdAt,\r\n              ...additionalData\r\n            })\r\n        } catch (error){\r\n            console.log('error creating user', error.message);\r\n        }\r\n    }\r\n    return userRef;\r\n}\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({\r\n    prompt: 'select_account'\r\n});\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}